openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /user-profile-view/{id}/:
    get:
      operationId: retrieveCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profileview_s'
          description: ''
      tags:
      - user-profile-view
    put:
      operationId: updateCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profileview_s'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profileview_s'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profileview_s'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profileview_s'
          description: ''
      tags:
      - user-profile-view
    patch:
      operationId: partialUpdateCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profileview_s'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profileview_s'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profileview_s'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profileview_s'
          description: ''
      tags:
      - user-profile-view
    delete:
      operationId: destroyCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - user-profile-view
  /user-fund-transfer-details/{id}/:
    get:
      operationId: retrieveLoggedUserTransactionsDetails
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - user-fund-transfer-details
  /api/schema/:
    get:
      operationId: listSpectaculars
      description: 'OpenApi3 schema for this API. Format can be selected via content
        negotiation.


        - YAML: application/vnd.oai.openapi

        - JSON: application/vnd.oai.openapi+json'
      parameters: []
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: array
                items: {}
            application/yaml:
              schema:
                type: array
                items: {}
            application/vnd.oai.openapi+json:
              schema:
                type: array
                items: {}
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/schema/swagger-ui/:
    get:
      operationId: listSpectacularSwaggers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            text/html:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/schema/redoc/:
    get:
      operationId: listSpectacularRedocs
      description: ''
      parameters: []
      responses:
        '200':
          content:
            text/html:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /register-user/:
    post:
      operationId: createCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - register-user
  /user-login-get-token/:
    post:
      operationId: createCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ''
      tags:
      - user-login-get-token
  /api/logout/:
    post:
      operationId: createLogout
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /password-reset-view/:
    post:
      operationId: createUser_registration_and_mpin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - password-reset-view
  /password-reset/confirm/{uidb64}/{token}/:
    post:
      operationId: createReset_password
      description: ''
      parameters:
      - name: uidb64
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: token
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - password-reset
  /fund-transfer/:
    post:
      operationId: createFund_Transfer_views
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - fund-transfer
  /other-transactions/:
    post:
      operationId: createOtherBank_Fund_Transfer_views
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - other-transactions
  /user-paybills/:
    post:
      operationId: createPayBills
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - user-paybills
  /token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - token
components:
  schemas:
    Profileview_s:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        is_staff:
          type: boolean
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        address:
          type: string
          nullable: true
        phone:
          type: integer
          maximum: 9223372036854775807
          format: int64
          nullable: true
          minimum: 0
        mpin:
          type: integer
          maximum: 9223372036854775807
          format: int64
          nullable: true
          minimum: 0
        account_number:
          type: integer
          maximum: 9223372036854775807
          format: int64
          nullable: true
          minimum: 0
        ifsc:
          type: string
          nullable: true
          maxLength: 30
        account_balance:
          type: integer
          maximum: 9223372036854775807
          format: int64
          nullable: true
          minimum: 0
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - password
      - username
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        phone:
          type: integer
          maximum: 9223372036854775807
          format: int64
          nullable: true
          minimum: 0
        email:
          type: string
          format: email
          maxLength: 254
        account_number:
          type: integer
          maximum: 9223372036854775807
          format: int64
          nullable: true
          minimum: 0
        ifsc:
          type: string
          nullable: true
          maxLength: 30
        account_balance:
          type: integer
          maximum: 9223372036854775807
          format: int64
          nullable: true
          minimum: 0
        mpin:
          type: string
          writeOnly: true
      required:
      - username
      - mpin
    UserLogin:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
        mpin:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - username
      - mpin
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
