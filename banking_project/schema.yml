openapi: 3.0.3
info:
  title: BANKING APPLICATION API
  version: 1.0.0
  description: BANKING APPLICATION API WHICH IS USER FOR BASIC BANKING  FUNCTIONALITIES
    WITH A SECURED MANNER
paths:
  /api/logout/:
    post:
      operationId: api_logout_create
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /fund-transfer/:
    post:
      operationId: fund_transfer_create
      tags:
      - fund-transfer
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /other-transactions/:
    post:
      operationId: other_transactions_create
      tags:
      - other-transactions
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /password-reset-view/:
    post:
      operationId: password_reset_view_create
      tags:
      - password-reset-view
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /password-reset/confirm/{uidb64}/{token}/:
    post:
      operationId: password_reset_confirm_create
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - password-reset
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /register-user/:
    post:
      operationId: register_user_create
      tags:
      - register-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /user-fund-transfer-details/{id}/:
    get:
      operationId: user_fund_transfer_details_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - user-fund-transfer-details
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user-login-get-token/:
    post:
      operationId: user_login_get_token_create
      tags:
      - user-login-get-token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ''
  /user-paybills/:
    post:
      operationId: user_paybills_create
      tags:
      - user-paybills
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user-profile-view/{id}/:
    get:
      operationId: user_profile_view_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - user-profile-view
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profileview_serializers'
          description: ''
components:
  schemas:
    Profileview_serializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        address:
          type: string
          nullable: true
        phone:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        mpin:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        account_number:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        ifsc:
          type: string
          nullable: true
          maxLength: 30
        account_balance:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - id
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        phone:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        account_number:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        ifsc:
          type: string
          nullable: true
          maxLength: 30
        account_balance:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        mpin:
          type: string
          writeOnly: true
      required:
      - id
      - mpin
      - username
    UserLogin:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
        mpin:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - mpin
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
